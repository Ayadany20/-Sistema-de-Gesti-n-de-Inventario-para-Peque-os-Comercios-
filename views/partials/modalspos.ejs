
 <body class="has-background-white-bis has-text-black" style="display: flex; flex-direction: column; min-height: 100vh;">
<!-- Agregar agregar -->
<div id="modal-agregar" class="box" style="
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2000;
  width: 400px;
  max-width: 90%;
  text-align: left;
  padding: 2rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  background-color: white;
">
  <!-- Botón cerrar en la x  -->
  <button class="delete" style="position: absolute; top: 10px; right: 10px;" onclick="cerrarFormularioagregar()"></button>

  <h3 class="title is-4">Agregar Producto + </h3>
  
  <form id="form-agregar">
    <div class="field">
      <label class="label">Nombre</label>
      <div class="control">
        <input class="input" type="text" id="nombre-producto" name="nombre" placeholder="Nombre del producto" required>
      </div>
    </div>
     <div class="field">
      <label class="label">Descripción</label>
      <div class="control">
        <input class="input" type="text" id="descripcion-producto" name="descripcion" placeholder="Descripcion">
      </div>
    </div>

    <div class="field">
      <label class="label">Categoria</label>
      <div class="control">
        <div class="select is-fullwidth"> 
          <select id="categoria-producto" name="categoriaId">
            <option value="">Seleccionar categoría</option>
            <% if (typeof categorias !== 'undefined' && categorias.length > 0) { %>
              <% categorias.forEach(categoria => { %>
                <option value="<%= categoria.categoriaId %>"><%= categoria.namecategoria %></option>
              <% }) %>
            <% } %>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label">Precio</label>
      <div class="control">
        <input class="input" type="number" step="0.01" id="precio-producto" name="precio" placeholder="Precio" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Stock</label>
      <div class="control">
        <input class="input" type="number" step="1" id="stock-producto" name="stock" placeholder="Stock" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Stock Mínimo</label>
      <div class="control">
        <input class="input" type="number" step="1" id="stockMinimo-producto" name="stockMinimo" placeholder="Stock mínimo" required>
      </div>
    </div>
    
    <div class="field">
      <label class="label">Proveedor</label>
      <div class="control">
        <div class="select is-fullwidth">
          <select id="proveedor-producto" name="proveedor_id">
            <option value="">Seleccionar proveedor</option>
            <% if (typeof proveedores !== 'undefined' && proveedores.length > 0) { %>
              <% proveedores.forEach(proveedor => { %>
                <option value="<%= proveedor.proveedorId %>"><%= proveedor.nameproveedor %></option>
              <% }) %>
            <% } %>
          </select>
        </div>
      </div>
    </div>

    <!-- Botones -->
    <div class="field is-grouped is-justify-content-end" style="margin-top: 1rem;">
      <p class="control">
        <button type="submit" class="button is-success">Guardar</button>
      </p>
      <p class="control">
        <button type="button" class="button is-light" onclick="cerrarFormularioagregar()">Cancelar</button>
      </p>
    </div>
  </form>
</div>
<!-- Js para abrir y cerrar -->
<script>
  function mostrarFormularioagregar() {
    document.getElementById('modal-agregar').style.display = 'block';
  }

  function cerrarFormularioagregar() {
    document.getElementById('modal-agregar').style.display = 'none';
    // Limpiar el formulario
    document.getElementById('form-agregar').reset();
  }

  // Manejar el envío del formulario de agregar
  document.getElementById('form-agregar').addEventListener('submit', function (e) {
    e.preventDefault();
    
    // Obtener los datos del formulario
    const formData = {
      nameProducto: document.getElementById('nombre-producto').value,
      descripcion: document.getElementById('descripcion-producto').value,
      precio: parseFloat(document.getElementById('precio-producto').value),
      categoriaId: document.getElementById('categoria-producto').value || null,
      stock: parseInt(document.getElementById('stock-producto').value),
      stockMinimo: parseInt(document.getElementById('stockMinimo-producto').value),
      proveedorId: document.getElementById('proveedor-producto').value || null
    };

    // Enviar los datos al servidor
    fetch('/api/productos', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert('Error: ' + data.error);
      } else {
        alert('Producto agregado exitosamente');
        cerrarFormularioagregar();
        // Recargar la página para mostrar el nuevo producto
        location.reload();
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error al agregar el producto');
    });
  });
</script>
<!-- Editar -->
<div id="modal-editar" class="box" style="
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2000;
  width: 400px;
  max-width: 90%;
  text-align: left;
  padding: 2rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  background-color: white;
">
  <!-- Botón cerrar en la x  -->
  <button class="delete" style="position: absolute; top: 10px; right: 10px;" onclick="cerrarFormularioEdicion()"></button>

  <h3 class="title is-4">Editar Producto</h3>
  
  <form id="form-editar">
    <input type="hidden" id="edit-producto-id" name="id">
    
    <div class="field">
      <label class="label">Nombre</label>
      <div class="control">
        <input class="input" type="text" id="edit-nombre-producto" name="nombre" placeholder="Nombre del producto" required>
      </div>
    </div>
     <div class="field">
      <label class="label">Descripción</label>
      <div class="control">
        <input class="input" type="text" id="edit-descripcion-producto" name="descripcion" placeholder="Descripción">
      </div>
    </div>

    <div class="field">
      <label class="label">Categoria</label>
      <div class="control">
        <div class="select is-fullwidth">
          <select id="edit-categoria-producto" name="categoria_id">
            <option value="">Seleccionar categoría</option>
            <% if (typeof categorias !== 'undefined' && categorias.length > 0) { %>
              <% categorias.forEach(categoria => { %>
                <option value="<%= categoria.categoriaId %>"><%= categoria.namecategoria %></option>
              <% }) %>
            <% } %>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label">Precio</label>
      <div class="control">
        <input class="input" type="number" step="0.01" id="edit-precio-producto" name="precio" placeholder="Precio" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Stock</label>
      <div class="control">
        <input class="input" type="number" step="1" id="edit-stock-producto" name="stock" placeholder="Stock" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Stock Mínimo</label>
      <div class="control">
        <input class="input" type="number" step="1" id="edit-stockMinimo-producto" name="stockMinimo" placeholder="Stock mínimo" required>
      </div>
    </div>
    
    <div class="field">
      <label class="label">Proveedor</label>
      <div class="control">
        <div class="select is-fullwidth">
          <select id="edit-proveedor-producto" name="proveedor_id">
            <option value="">Seleccionar proveedor</option>
            <% if (typeof proveedores !== 'undefined' && proveedores.length > 0) { %>
              <% proveedores.forEach(proveedor => { %>
                <option value="<%= proveedor.proveedorId %>"><%= proveedor.nameproveedor %></option>
              <% }) %>
            <% } %>
          </select>
        </div>
      </div>
    </div>

    <!-- Botones -->
    <div class="field is-grouped is-justify-content-end" style="margin-top: 1rem;">
      <p class="control">
        <button type="submit" class="button is-success">Guardar</button>
      </p>
      <p class="control">
        <button type="button" class="button is-light" onclick="cerrarFormularioEdicion()">Cancelar</button>
      </p>
    </div>
  </form>
</div>
<!-- JS para abrir y cerrar edición -->
<script>
  let idProductoAEditar = null;

  function mostrarFormularioEdicion(id) {
    idProductoAEditar = id;
    
    // Obtener los datos del producto
    fetch(`/api/productos/${id}`)
      .then(response => response.json())
      .then(producto => {
        // Llenar el formulario con los datos del producto
        document.getElementById('edit-producto-id').value = producto.productoId;
        document.getElementById('edit-nombre-producto').value = producto.nameProducto;
        document.getElementById('edit-descripcion-producto').value = producto.descripcion || '';
        document.getElementById('edit-precio-producto').value = producto.precio || 0;
        document.getElementById('edit-stock-producto').value = producto.stock;
        document.getElementById('edit-stockMinimo-producto').value = producto.stockMinimo || 0;
        
        // Seleccionar la categoría actual
        if (producto.categoriaId) {
          document.getElementById('edit-categoria-producto').value = producto.categoriaId;
        }
        
        // Seleccionar el proveedor actual
        if (producto.proveedorId) {
          document.getElementById('edit-proveedor-producto').value = producto.proveedorId;
        }
        
        // Mostrar el modal
        document.getElementById('modal-editar').style.display = 'block';
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error al cargar los datos del producto');
      });
  }

  function cerrarFormularioEdicion() {
    document.getElementById('modal-editar').style.display = 'none';
    idProductoAEditar = null;
    document.getElementById('form-editar').reset();
  }

  // Manejar el envío del formulario de edición
  document.getElementById('form-editar').addEventListener('submit', function (e) {
    e.preventDefault();
    
    if (!idProductoAEditar) return;
    
    // Obtener los datos del formulario
    const formData = {
      nameProducto: document.getElementById('edit-nombre-producto').value,
      descripcion: document.getElementById('edit-descripcion-producto').value,
      precio: parseFloat(document.getElementById('edit-precio-producto').value),
      categoriaId: document.getElementById('edit-categoria-producto').value || null,
      stock: parseInt(document.getElementById('edit-stock-producto').value),
      stockMinimo: parseInt(document.getElementById('edit-stockMinimo-producto').value),
      proveedorId: document.getElementById('edit-proveedor-producto').value || null
    };

    // Enviar los datos al servidor
    fetch(`/api/productos/${idProductoAEditar}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert('Error: ' + data.error);
      } else {
        alert('Producto actualizado exitosamente');
        cerrarFormularioEdicion();
        // Recargar la página para mostrar los cambios
        location.reload();
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error al actualizar el producto');
    });
  });
</script>
<!-- Modal de eliminación -->
<div id="modal-confirmar-eliminar" style="
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2000;
  background: white;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 0 20px rgba(0,0,0,0.3);
  width: 320px;
  max-width: 90%;
  text-align: center;
">
  <p style="margin-bottom: 1.5rem;"><strong>¿Estás seguro de que quieres eliminar este elemento?</strong></p>
  <button class="button is-danger" id="btn-confirmar-eliminar">Sí, eliminar</button>
  <button class="button is-light" onclick="cerrarConfirmacion()">Cancelar</button>
</div>
<script>
  let idAEliminar = null;

  function confirmarEliminar(id) {
    idAEliminar = id;
    document.getElementById('modal-confirmar-eliminar').style.display = 'block';
  }

  function cerrarConfirmacion() {
    idAEliminar = null;
    document.getElementById('modal-confirmar-eliminar').style.display = 'none';
  }

  document.getElementById('btn-confirmar-eliminar').addEventListener('click', () => {
    if (idAEliminar) {
      // Eliminar producto usando la API
      fetch(`/api/productos/${idAEliminar}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.error) {
          alert('Error: ' + data.error);
        } else {
          alert('Producto eliminado exitosamente');
          cerrarConfirmacion();
          // Recargar la página para actualizar la lista
          location.reload();
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error al eliminar el producto');
      });
    }
  });
</script>
 </body>